Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NUMBER
    PLUS
    UNKNOWN

Grammar

Rule 0     S' -> statement
Rule 1     statement -> create_bot
Rule 2     statement -> statement create_bot
Rule 3     response_rule -> STRING COLON RESPONSE LP STRING RP SEMICOLON
Rule 4     learn_rule -> STRING COLON LEARN LP ID RP SEMICOLON
Rule 5     forget_rule -> STRING COLON FORGET LP ID RP SEMICOLON
Rule 6     action_rule -> STRING COLON ACTION PERIOD SUM LP ID COMMA ID RP SEMICOLON
Rule 7     action_rule -> STRING COLON ACTION PERIOD SUBTRACT LP ID COMMA ID RP SEMICOLON
Rule 8     action_rule -> STRING COLON ACTION PERIOD MULTIPLY LP ID COMMA ID RP SEMICOLON
Rule 9     action_rule -> STRING COLON ACTION PERIOD POWER LP ID COMMA ID RP SEMICOLON
Rule 10    action_rule -> STRING COLON ACTION PERIOD JOKE LP RP SEMICOLON
Rule 11    action_rule -> STRING COLON ACTION PERIOD ROLLDICE LP RP SEMICOLON
Rule 12    action_rule -> STRING COLON ACTION PERIOD ROOT LP ID RP SEMICOLON
Rule 13    action_rule -> STRING COLON ACTION PERIOD DIVIDE LP ID COMMA ID RP SEMICOLON
Rule 14    action_rule -> STRING COLON ACTION PERIOD MODULO LP ID COMMA ID RP SEMICOLON
Rule 15    action_rule -> STRING COLON ACTION PERIOD RANDOM LP RP SEMICOLON
Rule 16    rules -> response_rule
Rule 17    rules -> learn_rule
Rule 18    rules -> action_rule
Rule 19    rules -> rules response_rule
Rule 20    rules -> rules action_rule
Rule 21    rules -> rules learn_rule
Rule 22    create_bot -> ID LC rules RC

Terminals, with rules where they appear

ACTION               : 6 7 8 9 10 11 12 13 14 15
COLON                : 3 4 5 6 7 8 9 10 11 12 13 14 15
COMMA                : 6 7 8 9 13 14
DIVIDE               : 13
FORGET               : 5
ID                   : 4 5 6 6 7 7 8 8 9 9 12 13 13 14 14 22
JOKE                 : 10
LC                   : 22
LEARN                : 4
LP                   : 3 4 5 6 7 8 9 10 11 12 13 14 15
MODULO               : 14
MULTIPLY             : 8
NUMBER               : 
PERIOD               : 6 7 8 9 10 11 12 13 14 15
PLUS                 : 
POWER                : 9
RANDOM               : 15
RC                   : 22
RESPONSE             : 3
ROLLDICE             : 11
ROOT                 : 12
RP                   : 3 4 5 6 7 8 9 10 11 12 13 14 15
SEMICOLON            : 3 4 5 6 7 8 9 10 11 12 13 14 15
STRING               : 3 3 4 5 6 7 8 9 10 11 12 13 14 15
SUBTRACT             : 7
SUM                  : 6
UNKNOWN              : 
error                : 

Nonterminals, with rules where they appear

action_rule          : 18 20
create_bot           : 1 2
forget_rule          : 
learn_rule           : 17 21
response_rule        : 16 19
rules                : 19 20 21 22
statement            : 2 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . create_bot
    (2) statement -> . statement create_bot
    (22) create_bot -> . ID LC rules RC

    ID              shift and go to state 3

    statement                      shift and go to state 1
    create_bot                     shift and go to state 2

state 1

    (0) S' -> statement .
    (2) statement -> statement . create_bot
    (22) create_bot -> . ID LC rules RC

    ID              shift and go to state 3

    create_bot                     shift and go to state 4

state 2

    (1) statement -> create_bot .

    ID              reduce using rule 1 (statement -> create_bot .)
    $end            reduce using rule 1 (statement -> create_bot .)


state 3

    (22) create_bot -> ID . LC rules RC

    LC              shift and go to state 5


state 4

    (2) statement -> statement create_bot .

    ID              reduce using rule 2 (statement -> statement create_bot .)
    $end            reduce using rule 2 (statement -> statement create_bot .)


state 5

    (22) create_bot -> ID LC . rules RC
    (16) rules -> . response_rule
    (17) rules -> . learn_rule
    (18) rules -> . action_rule
    (19) rules -> . rules response_rule
    (20) rules -> . rules action_rule
    (21) rules -> . rules learn_rule
    (3) response_rule -> . STRING COLON RESPONSE LP STRING RP SEMICOLON
    (4) learn_rule -> . STRING COLON LEARN LP ID RP SEMICOLON
    (6) action_rule -> . STRING COLON ACTION PERIOD SUM LP ID COMMA ID RP SEMICOLON
    (7) action_rule -> . STRING COLON ACTION PERIOD SUBTRACT LP ID COMMA ID RP SEMICOLON
    (8) action_rule -> . STRING COLON ACTION PERIOD MULTIPLY LP ID COMMA ID RP SEMICOLON
    (9) action_rule -> . STRING COLON ACTION PERIOD POWER LP ID COMMA ID RP SEMICOLON
    (10) action_rule -> . STRING COLON ACTION PERIOD JOKE LP RP SEMICOLON
    (11) action_rule -> . STRING COLON ACTION PERIOD ROLLDICE LP RP SEMICOLON
    (12) action_rule -> . STRING COLON ACTION PERIOD ROOT LP ID RP SEMICOLON
    (13) action_rule -> . STRING COLON ACTION PERIOD DIVIDE LP ID COMMA ID RP SEMICOLON
    (14) action_rule -> . STRING COLON ACTION PERIOD MODULO LP ID COMMA ID RP SEMICOLON
    (15) action_rule -> . STRING COLON ACTION PERIOD RANDOM LP RP SEMICOLON

    STRING          shift and go to state 10

    rules                          shift and go to state 6
    response_rule                  shift and go to state 7
    learn_rule                     shift and go to state 8
    action_rule                    shift and go to state 9

state 6

    (22) create_bot -> ID LC rules . RC
    (19) rules -> rules . response_rule
    (20) rules -> rules . action_rule
    (21) rules -> rules . learn_rule
    (3) response_rule -> . STRING COLON RESPONSE LP STRING RP SEMICOLON
    (6) action_rule -> . STRING COLON ACTION PERIOD SUM LP ID COMMA ID RP SEMICOLON
    (7) action_rule -> . STRING COLON ACTION PERIOD SUBTRACT LP ID COMMA ID RP SEMICOLON
    (8) action_rule -> . STRING COLON ACTION PERIOD MULTIPLY LP ID COMMA ID RP SEMICOLON
    (9) action_rule -> . STRING COLON ACTION PERIOD POWER LP ID COMMA ID RP SEMICOLON
    (10) action_rule -> . STRING COLON ACTION PERIOD JOKE LP RP SEMICOLON
    (11) action_rule -> . STRING COLON ACTION PERIOD ROLLDICE LP RP SEMICOLON
    (12) action_rule -> . STRING COLON ACTION PERIOD ROOT LP ID RP SEMICOLON
    (13) action_rule -> . STRING COLON ACTION PERIOD DIVIDE LP ID COMMA ID RP SEMICOLON
    (14) action_rule -> . STRING COLON ACTION PERIOD MODULO LP ID COMMA ID RP SEMICOLON
    (15) action_rule -> . STRING COLON ACTION PERIOD RANDOM LP RP SEMICOLON
    (4) learn_rule -> . STRING COLON LEARN LP ID RP SEMICOLON

    RC              shift and go to state 11
    STRING          shift and go to state 15

    response_rule                  shift and go to state 12
    action_rule                    shift and go to state 13
    learn_rule                     shift and go to state 14

state 7

    (16) rules -> response_rule .

    RC              reduce using rule 16 (rules -> response_rule .)
    STRING          reduce using rule 16 (rules -> response_rule .)


state 8

    (17) rules -> learn_rule .

    RC              reduce using rule 17 (rules -> learn_rule .)
    STRING          reduce using rule 17 (rules -> learn_rule .)


state 9

    (18) rules -> action_rule .

    RC              reduce using rule 18 (rules -> action_rule .)
    STRING          reduce using rule 18 (rules -> action_rule .)


state 10

    (3) response_rule -> STRING . COLON RESPONSE LP STRING RP SEMICOLON
    (4) learn_rule -> STRING . COLON LEARN LP ID RP SEMICOLON
    (6) action_rule -> STRING . COLON ACTION PERIOD SUM LP ID COMMA ID RP SEMICOLON
    (7) action_rule -> STRING . COLON ACTION PERIOD SUBTRACT LP ID COMMA ID RP SEMICOLON
    (8) action_rule -> STRING . COLON ACTION PERIOD MULTIPLY LP ID COMMA ID RP SEMICOLON
    (9) action_rule -> STRING . COLON ACTION PERIOD POWER LP ID COMMA ID RP SEMICOLON
    (10) action_rule -> STRING . COLON ACTION PERIOD JOKE LP RP SEMICOLON
    (11) action_rule -> STRING . COLON ACTION PERIOD ROLLDICE LP RP SEMICOLON
    (12) action_rule -> STRING . COLON ACTION PERIOD ROOT LP ID RP SEMICOLON
    (13) action_rule -> STRING . COLON ACTION PERIOD DIVIDE LP ID COMMA ID RP SEMICOLON
    (14) action_rule -> STRING . COLON ACTION PERIOD MODULO LP ID COMMA ID RP SEMICOLON
    (15) action_rule -> STRING . COLON ACTION PERIOD RANDOM LP RP SEMICOLON

    COLON           shift and go to state 16


state 11

    (22) create_bot -> ID LC rules RC .

    ID              reduce using rule 22 (create_bot -> ID LC rules RC .)
    $end            reduce using rule 22 (create_bot -> ID LC rules RC .)


state 12

    (19) rules -> rules response_rule .

    RC              reduce using rule 19 (rules -> rules response_rule .)
    STRING          reduce using rule 19 (rules -> rules response_rule .)


state 13

    (20) rules -> rules action_rule .

    RC              reduce using rule 20 (rules -> rules action_rule .)
    STRING          reduce using rule 20 (rules -> rules action_rule .)


state 14

    (21) rules -> rules learn_rule .

    RC              reduce using rule 21 (rules -> rules learn_rule .)
    STRING          reduce using rule 21 (rules -> rules learn_rule .)


state 15

    (3) response_rule -> STRING . COLON RESPONSE LP STRING RP SEMICOLON
    (6) action_rule -> STRING . COLON ACTION PERIOD SUM LP ID COMMA ID RP SEMICOLON
    (7) action_rule -> STRING . COLON ACTION PERIOD SUBTRACT LP ID COMMA ID RP SEMICOLON
    (8) action_rule -> STRING . COLON ACTION PERIOD MULTIPLY LP ID COMMA ID RP SEMICOLON
    (9) action_rule -> STRING . COLON ACTION PERIOD POWER LP ID COMMA ID RP SEMICOLON
    (10) action_rule -> STRING . COLON ACTION PERIOD JOKE LP RP SEMICOLON
    (11) action_rule -> STRING . COLON ACTION PERIOD ROLLDICE LP RP SEMICOLON
    (12) action_rule -> STRING . COLON ACTION PERIOD ROOT LP ID RP SEMICOLON
    (13) action_rule -> STRING . COLON ACTION PERIOD DIVIDE LP ID COMMA ID RP SEMICOLON
    (14) action_rule -> STRING . COLON ACTION PERIOD MODULO LP ID COMMA ID RP SEMICOLON
    (15) action_rule -> STRING . COLON ACTION PERIOD RANDOM LP RP SEMICOLON
    (4) learn_rule -> STRING . COLON LEARN LP ID RP SEMICOLON

    COLON           shift and go to state 17


state 16

    (3) response_rule -> STRING COLON . RESPONSE LP STRING RP SEMICOLON
    (4) learn_rule -> STRING COLON . LEARN LP ID RP SEMICOLON
    (6) action_rule -> STRING COLON . ACTION PERIOD SUM LP ID COMMA ID RP SEMICOLON
    (7) action_rule -> STRING COLON . ACTION PERIOD SUBTRACT LP ID COMMA ID RP SEMICOLON
    (8) action_rule -> STRING COLON . ACTION PERIOD MULTIPLY LP ID COMMA ID RP SEMICOLON
    (9) action_rule -> STRING COLON . ACTION PERIOD POWER LP ID COMMA ID RP SEMICOLON
    (10) action_rule -> STRING COLON . ACTION PERIOD JOKE LP RP SEMICOLON
    (11) action_rule -> STRING COLON . ACTION PERIOD ROLLDICE LP RP SEMICOLON
    (12) action_rule -> STRING COLON . ACTION PERIOD ROOT LP ID RP SEMICOLON
    (13) action_rule -> STRING COLON . ACTION PERIOD DIVIDE LP ID COMMA ID RP SEMICOLON
    (14) action_rule -> STRING COLON . ACTION PERIOD MODULO LP ID COMMA ID RP SEMICOLON
    (15) action_rule -> STRING COLON . ACTION PERIOD RANDOM LP RP SEMICOLON

    RESPONSE        shift and go to state 18
    LEARN           shift and go to state 19
    ACTION          shift and go to state 20


state 17

    (3) response_rule -> STRING COLON . RESPONSE LP STRING RP SEMICOLON
    (6) action_rule -> STRING COLON . ACTION PERIOD SUM LP ID COMMA ID RP SEMICOLON
    (7) action_rule -> STRING COLON . ACTION PERIOD SUBTRACT LP ID COMMA ID RP SEMICOLON
    (8) action_rule -> STRING COLON . ACTION PERIOD MULTIPLY LP ID COMMA ID RP SEMICOLON
    (9) action_rule -> STRING COLON . ACTION PERIOD POWER LP ID COMMA ID RP SEMICOLON
    (10) action_rule -> STRING COLON . ACTION PERIOD JOKE LP RP SEMICOLON
    (11) action_rule -> STRING COLON . ACTION PERIOD ROLLDICE LP RP SEMICOLON
    (12) action_rule -> STRING COLON . ACTION PERIOD ROOT LP ID RP SEMICOLON
    (13) action_rule -> STRING COLON . ACTION PERIOD DIVIDE LP ID COMMA ID RP SEMICOLON
    (14) action_rule -> STRING COLON . ACTION PERIOD MODULO LP ID COMMA ID RP SEMICOLON
    (15) action_rule -> STRING COLON . ACTION PERIOD RANDOM LP RP SEMICOLON
    (4) learn_rule -> STRING COLON . LEARN LP ID RP SEMICOLON

    RESPONSE        shift and go to state 18
    ACTION          shift and go to state 20
    LEARN           shift and go to state 19


state 18

    (3) response_rule -> STRING COLON RESPONSE . LP STRING RP SEMICOLON

    LP              shift and go to state 21


state 19

    (4) learn_rule -> STRING COLON LEARN . LP ID RP SEMICOLON

    LP              shift and go to state 22


state 20

    (6) action_rule -> STRING COLON ACTION . PERIOD SUM LP ID COMMA ID RP SEMICOLON
    (7) action_rule -> STRING COLON ACTION . PERIOD SUBTRACT LP ID COMMA ID RP SEMICOLON
    (8) action_rule -> STRING COLON ACTION . PERIOD MULTIPLY LP ID COMMA ID RP SEMICOLON
    (9) action_rule -> STRING COLON ACTION . PERIOD POWER LP ID COMMA ID RP SEMICOLON
    (10) action_rule -> STRING COLON ACTION . PERIOD JOKE LP RP SEMICOLON
    (11) action_rule -> STRING COLON ACTION . PERIOD ROLLDICE LP RP SEMICOLON
    (12) action_rule -> STRING COLON ACTION . PERIOD ROOT LP ID RP SEMICOLON
    (13) action_rule -> STRING COLON ACTION . PERIOD DIVIDE LP ID COMMA ID RP SEMICOLON
    (14) action_rule -> STRING COLON ACTION . PERIOD MODULO LP ID COMMA ID RP SEMICOLON
    (15) action_rule -> STRING COLON ACTION . PERIOD RANDOM LP RP SEMICOLON

    PERIOD          shift and go to state 23


state 21

    (3) response_rule -> STRING COLON RESPONSE LP . STRING RP SEMICOLON

    STRING          shift and go to state 24


state 22

    (4) learn_rule -> STRING COLON LEARN LP . ID RP SEMICOLON

    ID              shift and go to state 25


state 23

    (6) action_rule -> STRING COLON ACTION PERIOD . SUM LP ID COMMA ID RP SEMICOLON
    (7) action_rule -> STRING COLON ACTION PERIOD . SUBTRACT LP ID COMMA ID RP SEMICOLON
    (8) action_rule -> STRING COLON ACTION PERIOD . MULTIPLY LP ID COMMA ID RP SEMICOLON
    (9) action_rule -> STRING COLON ACTION PERIOD . POWER LP ID COMMA ID RP SEMICOLON
    (10) action_rule -> STRING COLON ACTION PERIOD . JOKE LP RP SEMICOLON
    (11) action_rule -> STRING COLON ACTION PERIOD . ROLLDICE LP RP SEMICOLON
    (12) action_rule -> STRING COLON ACTION PERIOD . ROOT LP ID RP SEMICOLON
    (13) action_rule -> STRING COLON ACTION PERIOD . DIVIDE LP ID COMMA ID RP SEMICOLON
    (14) action_rule -> STRING COLON ACTION PERIOD . MODULO LP ID COMMA ID RP SEMICOLON
    (15) action_rule -> STRING COLON ACTION PERIOD . RANDOM LP RP SEMICOLON

    SUM             shift and go to state 26
    SUBTRACT        shift and go to state 27
    MULTIPLY        shift and go to state 28
    POWER           shift and go to state 29
    JOKE            shift and go to state 30
    ROLLDICE        shift and go to state 31
    ROOT            shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    RANDOM          shift and go to state 35


state 24

    (3) response_rule -> STRING COLON RESPONSE LP STRING . RP SEMICOLON

    RP              shift and go to state 36


state 25

    (4) learn_rule -> STRING COLON LEARN LP ID . RP SEMICOLON

    RP              shift and go to state 37


state 26

    (6) action_rule -> STRING COLON ACTION PERIOD SUM . LP ID COMMA ID RP SEMICOLON

    LP              shift and go to state 38


state 27

    (7) action_rule -> STRING COLON ACTION PERIOD SUBTRACT . LP ID COMMA ID RP SEMICOLON

    LP              shift and go to state 39


state 28

    (8) action_rule -> STRING COLON ACTION PERIOD MULTIPLY . LP ID COMMA ID RP SEMICOLON

    LP              shift and go to state 40


state 29

    (9) action_rule -> STRING COLON ACTION PERIOD POWER . LP ID COMMA ID RP SEMICOLON

    LP              shift and go to state 41


state 30

    (10) action_rule -> STRING COLON ACTION PERIOD JOKE . LP RP SEMICOLON

    LP              shift and go to state 42


state 31

    (11) action_rule -> STRING COLON ACTION PERIOD ROLLDICE . LP RP SEMICOLON

    LP              shift and go to state 43


state 32

    (12) action_rule -> STRING COLON ACTION PERIOD ROOT . LP ID RP SEMICOLON

    LP              shift and go to state 44


state 33

    (13) action_rule -> STRING COLON ACTION PERIOD DIVIDE . LP ID COMMA ID RP SEMICOLON

    LP              shift and go to state 45


state 34

    (14) action_rule -> STRING COLON ACTION PERIOD MODULO . LP ID COMMA ID RP SEMICOLON

    LP              shift and go to state 46


state 35

    (15) action_rule -> STRING COLON ACTION PERIOD RANDOM . LP RP SEMICOLON

    LP              shift and go to state 47


state 36

    (3) response_rule -> STRING COLON RESPONSE LP STRING RP . SEMICOLON

    SEMICOLON       shift and go to state 48


state 37

    (4) learn_rule -> STRING COLON LEARN LP ID RP . SEMICOLON

    SEMICOLON       shift and go to state 49


state 38

    (6) action_rule -> STRING COLON ACTION PERIOD SUM LP . ID COMMA ID RP SEMICOLON

    ID              shift and go to state 50


state 39

    (7) action_rule -> STRING COLON ACTION PERIOD SUBTRACT LP . ID COMMA ID RP SEMICOLON

    ID              shift and go to state 51


state 40

    (8) action_rule -> STRING COLON ACTION PERIOD MULTIPLY LP . ID COMMA ID RP SEMICOLON

    ID              shift and go to state 52


state 41

    (9) action_rule -> STRING COLON ACTION PERIOD POWER LP . ID COMMA ID RP SEMICOLON

    ID              shift and go to state 53


state 42

    (10) action_rule -> STRING COLON ACTION PERIOD JOKE LP . RP SEMICOLON

    RP              shift and go to state 54


state 43

    (11) action_rule -> STRING COLON ACTION PERIOD ROLLDICE LP . RP SEMICOLON

    RP              shift and go to state 55


state 44

    (12) action_rule -> STRING COLON ACTION PERIOD ROOT LP . ID RP SEMICOLON

    ID              shift and go to state 56


state 45

    (13) action_rule -> STRING COLON ACTION PERIOD DIVIDE LP . ID COMMA ID RP SEMICOLON

    ID              shift and go to state 57


state 46

    (14) action_rule -> STRING COLON ACTION PERIOD MODULO LP . ID COMMA ID RP SEMICOLON

    ID              shift and go to state 58


state 47

    (15) action_rule -> STRING COLON ACTION PERIOD RANDOM LP . RP SEMICOLON

    RP              shift and go to state 59


state 48

    (3) response_rule -> STRING COLON RESPONSE LP STRING RP SEMICOLON .

    RC              reduce using rule 3 (response_rule -> STRING COLON RESPONSE LP STRING RP SEMICOLON .)
    STRING          reduce using rule 3 (response_rule -> STRING COLON RESPONSE LP STRING RP SEMICOLON .)


state 49

    (4) learn_rule -> STRING COLON LEARN LP ID RP SEMICOLON .

    RC              reduce using rule 4 (learn_rule -> STRING COLON LEARN LP ID RP SEMICOLON .)
    STRING          reduce using rule 4 (learn_rule -> STRING COLON LEARN LP ID RP SEMICOLON .)


state 50

    (6) action_rule -> STRING COLON ACTION PERIOD SUM LP ID . COMMA ID RP SEMICOLON

    COMMA           shift and go to state 60


state 51

    (7) action_rule -> STRING COLON ACTION PERIOD SUBTRACT LP ID . COMMA ID RP SEMICOLON

    COMMA           shift and go to state 61


state 52

    (8) action_rule -> STRING COLON ACTION PERIOD MULTIPLY LP ID . COMMA ID RP SEMICOLON

    COMMA           shift and go to state 62


state 53

    (9) action_rule -> STRING COLON ACTION PERIOD POWER LP ID . COMMA ID RP SEMICOLON

    COMMA           shift and go to state 63


state 54

    (10) action_rule -> STRING COLON ACTION PERIOD JOKE LP RP . SEMICOLON

    SEMICOLON       shift and go to state 64


state 55

    (11) action_rule -> STRING COLON ACTION PERIOD ROLLDICE LP RP . SEMICOLON

    SEMICOLON       shift and go to state 65


state 56

    (12) action_rule -> STRING COLON ACTION PERIOD ROOT LP ID . RP SEMICOLON

    RP              shift and go to state 66


state 57

    (13) action_rule -> STRING COLON ACTION PERIOD DIVIDE LP ID . COMMA ID RP SEMICOLON

    COMMA           shift and go to state 67


state 58

    (14) action_rule -> STRING COLON ACTION PERIOD MODULO LP ID . COMMA ID RP SEMICOLON

    COMMA           shift and go to state 68


state 59

    (15) action_rule -> STRING COLON ACTION PERIOD RANDOM LP RP . SEMICOLON

    SEMICOLON       shift and go to state 69


state 60

    (6) action_rule -> STRING COLON ACTION PERIOD SUM LP ID COMMA . ID RP SEMICOLON

    ID              shift and go to state 70


state 61

    (7) action_rule -> STRING COLON ACTION PERIOD SUBTRACT LP ID COMMA . ID RP SEMICOLON

    ID              shift and go to state 71


state 62

    (8) action_rule -> STRING COLON ACTION PERIOD MULTIPLY LP ID COMMA . ID RP SEMICOLON

    ID              shift and go to state 72


state 63

    (9) action_rule -> STRING COLON ACTION PERIOD POWER LP ID COMMA . ID RP SEMICOLON

    ID              shift and go to state 73


state 64

    (10) action_rule -> STRING COLON ACTION PERIOD JOKE LP RP SEMICOLON .

    RC              reduce using rule 10 (action_rule -> STRING COLON ACTION PERIOD JOKE LP RP SEMICOLON .)
    STRING          reduce using rule 10 (action_rule -> STRING COLON ACTION PERIOD JOKE LP RP SEMICOLON .)


state 65

    (11) action_rule -> STRING COLON ACTION PERIOD ROLLDICE LP RP SEMICOLON .

    RC              reduce using rule 11 (action_rule -> STRING COLON ACTION PERIOD ROLLDICE LP RP SEMICOLON .)
    STRING          reduce using rule 11 (action_rule -> STRING COLON ACTION PERIOD ROLLDICE LP RP SEMICOLON .)


state 66

    (12) action_rule -> STRING COLON ACTION PERIOD ROOT LP ID RP . SEMICOLON

    SEMICOLON       shift and go to state 74


state 67

    (13) action_rule -> STRING COLON ACTION PERIOD DIVIDE LP ID COMMA . ID RP SEMICOLON

    ID              shift and go to state 75


state 68

    (14) action_rule -> STRING COLON ACTION PERIOD MODULO LP ID COMMA . ID RP SEMICOLON

    ID              shift and go to state 76


state 69

    (15) action_rule -> STRING COLON ACTION PERIOD RANDOM LP RP SEMICOLON .

    RC              reduce using rule 15 (action_rule -> STRING COLON ACTION PERIOD RANDOM LP RP SEMICOLON .)
    STRING          reduce using rule 15 (action_rule -> STRING COLON ACTION PERIOD RANDOM LP RP SEMICOLON .)


state 70

    (6) action_rule -> STRING COLON ACTION PERIOD SUM LP ID COMMA ID . RP SEMICOLON

    RP              shift and go to state 77


state 71

    (7) action_rule -> STRING COLON ACTION PERIOD SUBTRACT LP ID COMMA ID . RP SEMICOLON

    RP              shift and go to state 78


state 72

    (8) action_rule -> STRING COLON ACTION PERIOD MULTIPLY LP ID COMMA ID . RP SEMICOLON

    RP              shift and go to state 79


state 73

    (9) action_rule -> STRING COLON ACTION PERIOD POWER LP ID COMMA ID . RP SEMICOLON

    RP              shift and go to state 80


state 74

    (12) action_rule -> STRING COLON ACTION PERIOD ROOT LP ID RP SEMICOLON .

    RC              reduce using rule 12 (action_rule -> STRING COLON ACTION PERIOD ROOT LP ID RP SEMICOLON .)
    STRING          reduce using rule 12 (action_rule -> STRING COLON ACTION PERIOD ROOT LP ID RP SEMICOLON .)


state 75

    (13) action_rule -> STRING COLON ACTION PERIOD DIVIDE LP ID COMMA ID . RP SEMICOLON

    RP              shift and go to state 81


state 76

    (14) action_rule -> STRING COLON ACTION PERIOD MODULO LP ID COMMA ID . RP SEMICOLON

    RP              shift and go to state 82


state 77

    (6) action_rule -> STRING COLON ACTION PERIOD SUM LP ID COMMA ID RP . SEMICOLON

    SEMICOLON       shift and go to state 83


state 78

    (7) action_rule -> STRING COLON ACTION PERIOD SUBTRACT LP ID COMMA ID RP . SEMICOLON

    SEMICOLON       shift and go to state 84


state 79

    (8) action_rule -> STRING COLON ACTION PERIOD MULTIPLY LP ID COMMA ID RP . SEMICOLON

    SEMICOLON       shift and go to state 85


state 80

    (9) action_rule -> STRING COLON ACTION PERIOD POWER LP ID COMMA ID RP . SEMICOLON

    SEMICOLON       shift and go to state 86


state 81

    (13) action_rule -> STRING COLON ACTION PERIOD DIVIDE LP ID COMMA ID RP . SEMICOLON

    SEMICOLON       shift and go to state 87


state 82

    (14) action_rule -> STRING COLON ACTION PERIOD MODULO LP ID COMMA ID RP . SEMICOLON

    SEMICOLON       shift and go to state 88


state 83

    (6) action_rule -> STRING COLON ACTION PERIOD SUM LP ID COMMA ID RP SEMICOLON .

    RC              reduce using rule 6 (action_rule -> STRING COLON ACTION PERIOD SUM LP ID COMMA ID RP SEMICOLON .)
    STRING          reduce using rule 6 (action_rule -> STRING COLON ACTION PERIOD SUM LP ID COMMA ID RP SEMICOLON .)


state 84

    (7) action_rule -> STRING COLON ACTION PERIOD SUBTRACT LP ID COMMA ID RP SEMICOLON .

    RC              reduce using rule 7 (action_rule -> STRING COLON ACTION PERIOD SUBTRACT LP ID COMMA ID RP SEMICOLON .)
    STRING          reduce using rule 7 (action_rule -> STRING COLON ACTION PERIOD SUBTRACT LP ID COMMA ID RP SEMICOLON .)


state 85

    (8) action_rule -> STRING COLON ACTION PERIOD MULTIPLY LP ID COMMA ID RP SEMICOLON .

    RC              reduce using rule 8 (action_rule -> STRING COLON ACTION PERIOD MULTIPLY LP ID COMMA ID RP SEMICOLON .)
    STRING          reduce using rule 8 (action_rule -> STRING COLON ACTION PERIOD MULTIPLY LP ID COMMA ID RP SEMICOLON .)


state 86

    (9) action_rule -> STRING COLON ACTION PERIOD POWER LP ID COMMA ID RP SEMICOLON .

    RC              reduce using rule 9 (action_rule -> STRING COLON ACTION PERIOD POWER LP ID COMMA ID RP SEMICOLON .)
    STRING          reduce using rule 9 (action_rule -> STRING COLON ACTION PERIOD POWER LP ID COMMA ID RP SEMICOLON .)


state 87

    (13) action_rule -> STRING COLON ACTION PERIOD DIVIDE LP ID COMMA ID RP SEMICOLON .

    RC              reduce using rule 13 (action_rule -> STRING COLON ACTION PERIOD DIVIDE LP ID COMMA ID RP SEMICOLON .)
    STRING          reduce using rule 13 (action_rule -> STRING COLON ACTION PERIOD DIVIDE LP ID COMMA ID RP SEMICOLON .)


state 88

    (14) action_rule -> STRING COLON ACTION PERIOD MODULO LP ID COMMA ID RP SEMICOLON .

    RC              reduce using rule 14 (action_rule -> STRING COLON ACTION PERIOD MODULO LP ID COMMA ID RP SEMICOLON .)
    STRING          reduce using rule 14 (action_rule -> STRING COLON ACTION PERIOD MODULO LP ID COMMA ID RP SEMICOLON .)

